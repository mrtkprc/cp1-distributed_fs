# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import dfs_pb2 as dfs__pb2


class DFSStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateFile = channel.unary_unary(
        '/dfs.DFS/CreateFile',
        request_serializer=dfs__pb2.CreateFileRequest.SerializeToString,
        response_deserializer=dfs__pb2.CreateFileReply.FromString,
        )


class DFSServicer(object):
  """The greeting service definition.
  """

  def CreateFile(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DFSServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateFile': grpc.unary_unary_rpc_method_handler(
          servicer.CreateFile,
          request_deserializer=dfs__pb2.CreateFileRequest.FromString,
          response_serializer=dfs__pb2.CreateFileReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dfs.DFS', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
